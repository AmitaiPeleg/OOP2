
public class Folder {
	private File[] files;
	private int counter;
	public Folder(int size) {
		files = new File[size];
        
	}
	

    public void addFile(File f) {
        if (counter < files.length) {
            files[counter++] = f;
        }
    }

    @Override
    public Folder clone() {
        try {
            Folder cloned = (Folder) super.clone(); // שיבוט רדוד של Folder

            // יצירת מערך חדש ושיבוט כל קובץ
            cloned.files = new File[this.files.length];
            for (int i = 0; i < this.counter; i++) {
                if (this.files[i] != null)
                    cloned.files[i] = this.files[i].clone();
            }

            return cloned;
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }
    }
    class MyIterator{
        private String wordcurrent;
        private File fileCurrent;
        public MyIterator(){
           fileCurrent = files[0];
           wordcurrent = (files[0].toArray())[0];
        }
      
       

        }
        public boolean hasNextFile(){
            return files.indexOf(fileCurrent)< counter;
        }
       
    }
    


